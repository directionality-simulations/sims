ggplot(sims_df[case == 'case1', ], aes(x = lag_amount, y = b1, shape = model)) +
geom_point(stat = 'summary', fun.y = 'mean') +
facet_wrap(~factor(sample_size))
ggplot(sims_df[case == 'case1' & sample_size == 550, ], aes(x = lag_amount, y = b1, shape = model, group = model, linetype = model)) +
geom_point(stat = 'summary', fun.y = 'mean') +
geom_line(stat = 'summary', fun.y = 'mean')
# se
ggplot(sims_df[case == 'case1', ], aes(x = lag_amount, y = se, shape = model, group = model, linetype = model)) +
geom_point(stat = 'summary', fun.y = 'mean') +
geom_line(stat = 'summary', fun.y = 'mean') +
facet_wrap(~factor(sample_size))
ggplot(sims_df[case == 'case1' & lag_amount == 0, ], aes(x = sample_size, y = se, shape = model, group = model, linetype = model)) +
geom_point(stat = 'summary', fun.y = 'mean') +
geom_line(stat = 'summary', fun.y = 'mean')
ggplot(sims_df[case == 'case1', ], aes(x = lag_amount, y = p_value, shape = model, group = model, linetype = model)) +
geom_point(stat = 'summary', fun.y = 'mean') +
geom_line(stat = 'summary', fun.y = 'mean') +
facet_wrap(~factor(sample_size))
ggplot(sims_df[case == 'case1', ], aes(x = lag_amount, y = p_value, shape = model, group = model, linetype = model)) +
geom_point(stat = 'summary', fun.y = 'mean') +
geom_line(stat = 'summary', fun.y = 'mean') +
facet_wrap(~factor(sample_size))
ggplot(sims_df[case == 'case1' & sample_size == 550, ], aes(x = lag_amount, y = p_value, shape = model, group = model, linetype = model)) +
geom_point(stat = 'summary', fun.y = 'mean') +
geom_line(stat = 'summary', fun.y = 'mean')
all_plotter <- function(caser){
# b1
b1a <- ggplot(sims_df[case == caser, ], aes(x = lag_amount, y = b1, shape = model)) +
geom_point(stat = 'summary', fun.y = 'mean') +
facet_wrap(~factor(sample_size))
b1b <- ggplot(sims_df[case == caser & sample_size == 550, ], aes(x = lag_amount, y = b1, shape = model, group = model, linetype = model)) +
geom_point(stat = 'summary', fun.y = 'mean') +
geom_line(stat = 'summary', fun.y = 'mean')
# se
sea <- ggplot(sims_df[case == caser, ], aes(x = lag_amount, y = se, shape = model, group = model, linetype = model)) +
geom_point(stat = 'summary', fun.y = 'mean') +
geom_line(stat = 'summary', fun.y = 'mean') +
facet_wrap(~factor(sample_size))
seb <- ggplot(sims_df[case == caser & lag_amount == 0, ], aes(x = sample_size, y = se, shape = model, group = model, linetype = model)) +
geom_point(stat = 'summary', fun.y = 'mean') +
geom_line(stat = 'summary', fun.y = 'mean')
# p vals
pa <- ggplot(sims_df[case == caser, ], aes(x = lag_amount, y = p_value, shape = model, group = model, linetype = model)) +
geom_point(stat = 'summary', fun.y = 'mean') +
geom_line(stat = 'summary', fun.y = 'mean') +
facet_wrap(~factor(sample_size))
pb <- ggplot(sims_df[case == caser & sample_size == 550, ], aes(x = lag_amount, y = p_value, shape = model, group = model, linetype = model)) +
geom_point(stat = 'summary', fun.y = 'mean') +
geom_line(stat = 'summary', fun.y = 'mean')
return(list(
b1a,
b1b,
sea,
seb,
pa,
pb
))
}
c2_plots <- all_plotter('case2')
c2_plots[[1]]
c2_plots[[2]]
c2_plots[[3]]
c2_plots[[4]]
c2_plots[[5]]
c2_plots[[6]]
c3_symm_plots <- all_plotter('case3_symm')
c3_symm_plots[[1]]
c3_symm_plots[[2]]
c3_symm_plots[[3]]
c3_symm_plots[[4]]
c3_symm_plots[[5]]
c3_symm_plots[[6]]
c3_lagy_plots <- all_plotter('case3_lagy')
c3_lagy_plots[[1]]
c3_lagy_plots[[2]]
c3_lagy_plots[[3]]
c3_lagy_plots[[4]]
c3_lagy_plots[[5]]
c3_lagy_plots[[6]]
c3_lagx_plots <- all_plotter('case3_lagx')
c3_lagx_plots[[1]]
c3_lagx_plots[[2]]
c3_lagx_plots[[3]]
c3_lagx_plots[[4]]
c3_lagx_plots[[5]]
c3_lagx_plots[[6]]
load('sims_output/sims_environment.RData')
View(case1)
case1[[1]]
str(case1)
View(c1_df)
c1_df <- data.table(c1_df)
library(data.table)
c1_df <- data.table(c1_df)
c1_df[sample_size == 72 & model == 'partial', ]
c1_df[sample_size == 72 & lag_amount == 0, ]
# case 1
c1_df <- rbindlist(case1)
# case 2
c2_df <- rbindlist(case2)
# case 3
c3_symm_df <- rbindlist(case3_symm)
c3_lagy <- rbindlist(case3_lagy)
c3_lagx <- rbindlist(case3_lagx)
# merge all
sims_df <- bind_rows(c1_df,
c2_df,
c3_symm_df,
c3_lagy,
c3_lagx)
library(furrr)
library(tidyverse)
# merge all
sims_df <- bind_rows(c1_df,
c2_df,
c3_symm_df,
c3_lagy,
c3_lagx)
18000 * 5
500 * 36
# tidy
sims_df <- sims_df %>%
gather(contains("b1"), key = 'named', value = 'b1') %>%
gather(contains('p_'), key = 'named', value = 'p_value') %>%
gather(contains('se_'), key = 'named', value = 'se') %>%
mutate(model = case_when(
named %in% c('p_wo_partial', 'se_wo_partial', 'b1_wo_partial') ~ 'wo_partial',
named %in% c('p_partial', 'se_partial', 'b1_partial') ~ 'partial'
)) %>%
dplyr::select(-named) %>%
dplyr::select(case, model, sample_size, lag_amount, b1, se, p_value)
View(sims_df)
# merge all
sims_df <- bind_rows(c1_df,
c2_df,
c3_symm_df,
c3_lagy,
c3_lagx)
# tidy
sims_df <- sims_df %>%
gather(contains("b1"), key = 'named', value = 'b1') %>%
gather(contains('p_'), key = 'named', value = 'p_value') %>%
gather(contains('se_'), key = 'named', value = 'se') %>%
mutate(model = case_when(
named %in% c('p_wo_partial', 'se_wo_partial', 'b1_wo_partial') ~ 'wo_partial',
named %in% c('p_partial', 'se_partial', 'b1_partial') ~ 'partial'
)) %>%
dplyr::select(-named) %>%
dplyr::select(case, model, sample_size, lag_amount, b1, se, p_value)
View(sims_df)
# merge all
sims_df <- bind_rows(c1_df,
c2_df,
c3_symm_df,
c3_lagy,
c3_lagx)
sims_df <- sims_df %>%
gather(contains("b1"), key = 'named', value = 'b1')
View(sims_df)
cd_try <- data.frame(
'b_partial' = c(1,2,3)
'b_wo_partial' = c(4,5,6)
'se_partial' = c(6,7,8),
'se_wo_partial' = c(3,2,1)
)
cd_try <- data.frame(
'b_partial' = c(1,2,3)
'b_wo_partial' = c(4,5,6)
'se_partial' = c(6,7,8),
'se_wo_partial' = c(3,2,1)
)
cd_try <- data.frame(
'b_partial' = c(1,2,3),
'b_wo_partial' = c(4,5,6),
'se_partial' = c(6,7,8),
'se_wo_partial' = c(3,2,1)
)
cd_try
cd_try <- cd_try %>%
gather(b_partial, b_wo_partial, se_partial, se_wo_partial, key = 'model', value = 'value')
cd_try
?spread
cd_try <- cd_try %>%
spread(model)
cd_try
cd_try <- cd_try %>%
spread(model)
cd_try <- cd_try %>%
spread(b_partial)
cd_try <- cd_try %>%
gather(b_partial, b_wo_partial, key = 'model', value = 'b1')
cd_try
cd_try <- data.frame(
'b_partial' = c(1,2,3),
'b_wo_partial' = c(4,5,6),
'se_partial' = c(6,7,8),
'se_wo_partial' = c(3,2,1)
)
cd_try
cd_try <- cd_try %>%
gather(b_partial, b_wo_partial, key = 'model', value = 'b1')
cd_try
cd_try <- cd_try %>%
gather(se_partial, se_wo_partial, key = 'se_model', value = 'sd')
cd_try
cd_try <- data.frame(
'b_partial' = c(1,2,3),
'b_wo_partial' = c(4,5,6),
'se_partial' = c(6,7,8),
'se_wo_partial' = c(3,2,1)
)
cd_try
df <- data.frame(month=rep(1:3,2),
student=rep(c("Amy", "Bob"), each=3),
A=c(9, 7, 6, 8, 6, 9),
B=c(6, 7, 8, 5, 6, 7))
df
df %>%
gather(variable, value, -(month:student))
df %>%
gather(variable, value, -(month:student)) %>%
unite(temp, student, variable)
df %>%
gather(variable, value, -(month:student)) %>%
unite(temp, student, variable) %>%
spread(temp, value)
cd_try <- data.frame(
'b_partial' = c(1,2,3),
'b_wo_partial' = c(4,5,6),
'se_partial' = c(6,7,8),
'se_wo_partial' = c(3,2,1)
)
cd_try
cd_try <- cd_try %>%
gather(b_partial, b_wo_partial,
se_partial, se_wo_partial,
key = 'result_model', value = 'value')
cd_try
cd_try <- cd_try %>%
split(result_model)
?separate
cd_try <- cd_try %>%
separate(result_model, into = c('result', 'model'), sep = "_")
cd_try
cd_try <- cd_try %>%
spread(result)
cd_try <- cd_try %>%
spread(key = result, value = value)
cd_try <- cd_try %>%
spread(key = result, value = value)
cd_try <- cd_try %>%
spread(key = 'result', value = 'value')
cd_try <- cd_try %>%
mutate(id = 1:n())
cd_try
cd_try <- cd_try %>%
spread(result, value)
cd_try
cd_try <- data.frame(
'b_partial' = c(1,2,3),
'b_wo_partial' = c(4,5,6),
'se_partial' = c(6,7,8),
'se_wo_partial' = c(3,2,1)
)
cd_try
cd_try <- cd_try %>%
gather(b_partial, b_wo_partial,
se_partial, se_wo_partial,
key = 'result_model', value = 'value')
cd_try
cd_try <- cd_try %>%
separate(result_model, into = c('result', 'model'), sep = "_")
cd_try
cd_try <- cd_try %>%
mutate(row_help = 1:6)
cd_try <- cd_try %>%
mutate(row_help = rep(1:6, 2))
cd_try
cd_try <- cd_try %>%
spread(result, value)
cd_try
# merge all
sims_df <- bind_rows(c1_df,
c2_df,
c3_symm_df,
c3_lagy,
c3_lagx)
View(sims_df)
# tidy
sims_df <- sims_df %>%
gather(b1_wo_partial, b1_partial,
se_wo_partial, se_partial,
p_wo_partial, p_partial,
key = 'result_model', value = 'value') %>%
separate(result_model, into = c('result_model'), sep = '_')
# merge all
sims_df <- bind_rows(c1_df,
c2_df,
c3_symm_df,
c3_lagy,
c3_lagx)
# tidy
sims_df <- sims_df %>%
gather(b1_wo_partial, b1_partial,
se_wo_partial, se_partial,
p_wo_partial, p_partial,
key = 'result_model', value = 'value') %>%
separate(result_model, into = c('resul', 'model'), sep = '_')
# merge all
sims_df <- bind_rows(c1_df,
c2_df,
c3_symm_df,
c3_lagy,
c3_lagx)
# tidy
sims_df <- sims_df %>%
gather(b1_wo_partial, b1_partial,
se_wo_partial, se_partial,
p_wo_partial, p_partial,
key = 'result_model', value = 'value') %>%
separate(result_model, into = c('result', 'model'), sep = '_') %>%
mutate(row_help = rep(1:1000, 3)) %>%
spread(result, value)
# merge all
sims_df <- bind_rows(c1_df,
c2_df,
c3_symm_df,
c3_lagy,
c3_lagx)
# tidy
sims_df <- sims_df %>%
gather(b1_wo_partial, b1_partial,
se_wo_partial, se_partial,
p_wo_partial, p_partial,
key = 'result_model', value = 'value') %>%
separate(result_model, into = c('result', 'model'), sep = '_') %>%
mutate(row_help = rep(1:1000, 9)) %>%
spread(result, value)
90000 / 1000
# merge all
sims_df <- bind_rows(c1_df,
c2_df,
c3_symm_df,
c3_lagy,
c3_lagx)
# tidy
sims_df <- sims_df %>%
gather(b1_wo_partial, b1_partial,
se_wo_partial, se_partial,
p_wo_partial, p_partial,
key = 'result_model', value = 'value') %>%
separate(result_model, into = c('result', 'model'), sep = '_') %>%
mutate(row_help = rep(1:1000, 90)) %>%
spread(result, value)
# merge all
sims_df <- bind_rows(c1_df,
c2_df,
c3_symm_df,
c3_lagy,
c3_lagx)
sims_df <- sims_df %>%
gather(b1_wo_partial, b1_partial,
se_wo_partial, se_partial,
p_wo_partial, p_partial,
key = 'result_model', value = 'value') %>%
separate(result_model, into = c('result', 'model'), sep = '_')
View(sims_df)
540000 / 9000
# merge all
sims_df <- bind_rows(c1_df,
c2_df,
c3_symm_df,
c3_lagy,
c3_lagx)
# tidy
sims_df <- sims_df %>%
gather(b1_wo_partial, b1_partial,
se_wo_partial, se_partial,
p_wo_partial, p_partial,
key = 'result_model', value = 'value') %>%
separate(result_model, into = c('result', 'model'), sep = '_') %>%
mutate(row_help = rep(1:9000, 60)) %>%
spread(result, value)
# merge all
sims_df <- bind_rows(c1_df,
c2_df,
c3_symm_df,
c3_lagy,
c3_lagx)
# tidy
sims_df <- sims_df %>%
gather(b1_wo_partial, b1_partial,
se_wo_partial, se_partial,
p_wo_partial, p_partial,
key = 'result_model', value = 'value') %>%
separate(result_model, into = c('result', 'model'), sep = '_') %>%
mutate(row_help = rep(1:9000, 60)) %>%
spread(result, value) %>%
dplyr::select(-row_help) %>%
dplyr::select(case, model, sample_size, lag_amount, b1, se, p_value)
# merge all
sims_df <- bind_rows(c1_df,
c2_df,
c3_symm_df,
c3_lagy,
c3_lagx)
sims_df <- sims_df %>%
gather(b1_wo_partial, b1_partial,
se_wo_partial, se_partial,
p_wo_partial, p_partial,
key = 'result_model', value = 'value') %>%
separate(result_model, into = c('result', 'model'), sep = '_') %>%
mutate(row_help = rep(1:9000, 60)) %>%
spread(result, value) %>%
dplyr::select(-row_help)
# merge all
sims_df <- bind_rows(c1_df,
c2_df,
c3_symm_df,
c3_lagy,
c3_lagx)
# tidy
sims_df <- sims_df %>%
gather(b1_wo_partial, b1_partial,
se_wo_partial, se_partial,
p_wo_partial, p_partial,
key = 'result_model', value = 'value') %>%
separate(result_model, into = c('result', 'model'), sep = '_') %>%
mutate(row_help = rep(1:9000, 60)) %>%
spread(result, value) %>%
dplyr::select(-row_help) %>%
dplyr::select(case, model, sample_size, lag_amount, b1, se, p)
# merge all
sims_df <- bind_rows(c1_df,
c2_df,
c3_symm_df,
c3_lagy,
c3_lagx)
# tidy
sims_df <- sims_df %>%
gather(b1_wo_partial, b1_partial,
se_wo_partial, se_partial,
p_wo_partial, p_partial,
key = 'result_model', value = 'value') %>%
separate(result_model, into = c('result', 'model'), sep = '_') %>%
mutate(row_help = rep(1:9000, 60)) %>%
spread(result, value) %>%
dplyr::select(-row_help) %>%
dplyr::select(case, model, sample_size, lag_amount, b1, se, p) %>%
rename(p = 'p_value')
# tidy
sims_df <- sims_df %>%
gather(b1_wo_partial, b1_partial,
se_wo_partial, se_partial,
p_wo_partial, p_partial,
key = 'result_model', value = 'value') %>%
separate(result_model, into = c('result', 'model'), sep = '_') %>%
mutate(row_help = rep(1:9000, 60)) %>%
spread(result, value) %>%
dplyr::select(-row_help) %>%
dplyr::select(case, model, sample_size, lag_amount, b1, se, p) %>%
rename(p_value = p)
# Save it for plotting --------------------------------------------
write.csv(sims_df, file = 'sims_output/sims_df.csv', row.names = F)
cases <- unique(sims_df[, 'case'])
case_descriptions <- c('dgp: x causes y',
'dgp: y causes x',
'dgp: z causes x and y by the same lag amount',
'dgp: z causes x concurrently and y by some lag amount',
'dgp: z causes y concurrently and x by some lag amount')
case_explain <- data.frame(
'Name' = c(cases),
'Description' = c(case_descriptions)
)
variables <- names(sims_df)
description <- c('The causal structure in the dgp',
'The type of estimated model',
'The sample size',
'The lag length of the exogenous to endogneous effect in the dgp',
'The coefficient relating x to y in the estimated models',
'The standard error on b1 in the estimated models',
'The p value on b1 in the estimated models')
variable_descripts <- data.frame(
'Variables' = c(variables),
'Description' = c(description)
)
model_types <- c('A model where y is regressed on x',
'A model where y is regressed on x and prior y')
model_names <- c('wo_partial',
'partial')
model_t <- data.frame(
'Name' = c(model_names),
'Description' = c(model_types)
)
library(xtable)
vd_table <- xtable(variable_descripts, caption = 'Variable Descriptions')
vd_out <- print.xtable(vd_table, type = 'latex', include.rownames = F)
m_table <- xtable(model_t, caption = 'Note on Models')
m_out <- print.xtable(m_table, include.rownames = F)
cat('\\documentclass{article}\n',
'\\begin{document}\n',
c(vd_out, paste('\n')),
c(m_out, paste('\n')),
'\\end{document}',
file = 'variable_descriptions/variable_descriptions.md')
c_table <- xtable(case_explain)
c_out <- print.xtable(c_table, type = 'latex', include.rownames = F)
cat('\\documentclass{article}\n',
'\\begin{document}\n',
c(c_out, paste('\n')),
'\\end{document}',
file = 'variable_descriptions/case_descriptions.md')
